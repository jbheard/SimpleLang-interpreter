SimpleLang++ Compiler/Language Specifications
Originally By Jason Rush (AkSnowman)
Updated by Jacob Torrey
Modified by Jacob Heard

Syntax:
Beyond the original SimpleLang commands, the following new commands are introduced.

#
when no file is opened:
	Move X cells forward, read in filename until a null (0x00) byte is reached,
	open file for reading/writing. Pointer is then returned to original cell
	and original cell's value is replaced with 0x00 for success or 0xFF(-1) for
	failure. No other cells/values are modified.
	ex. [5][?][?][?][?]['t']['e']['s']['t']['.']['t']['x']['t'][0x00]
when a file is opened:
	Closes opened file

:
Reads in 1 character/byte from File and advances File Pointer.
If EOF is reached, 0x00 is returned.

;
Writes value of current cell to File and advances File Pointer.

%
When no network connection is opened:
	Move X cells forward, read in remote address (IP or domain) until a
	null (0x00) byte is reached, then reads in 2 byte port
	(ex port 10 = [0x00][0x0A]). A TCP connection is opened to requested
	domain at requested port. If no domain is specified, a server is opened
	on the requested port and waits to accept a connection. Pointer is returned 
	to original cell and original cell's value is replaced with 0x00 for 
	success or 0xFF(-1) for failure. No other cells/values are modified.
when a network connection is opened:
	Closes the open network connection

^
Sends value of current cell through the open network connection/socket.
If no network connection is open, does nothing.

!
Reads in 1 character/byte from network connection/socket.
If connection is closed by remote host, 0x00 is returned and put into the current cell instead.
If no connection is opened, does nothing.

# implies only 1 file may be opened at any given time
: implies use of files with 0x00's will cause false EOF conditions
; lack of any sort of erroring (read-only files and such)
% implies only 1 network connection may be opened at any given time.
TCP is assumed.
! is a blocking read, so the interpreter will wait until it recieves, or the connection is closed

SimpleLang++ is also backwards compatable with SimpleLang as long as one has no
SimpleLang++ command characters in their SimpleLang source
(other options depend on SimpleLang and SimpleLang++ compiler/interpreter arguments)

Compiler specific information:
* 8-bit bytes
* 1-byte cells
* 0xFF + 1 == 0x00 and 0x00 - 1 == 0xFF
* array is 32,768 cells in length (2^15)
* pointer starts at first cell
* read commands (stdin, file, and network) take in newlines as received from the OS
	- ie. may be just 10, just 13, or 13 10 (CRLF)

All compiler specific information/specifications may be modified by arguments passed to compiler
